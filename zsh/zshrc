# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=1000000
setopt autocd
unsetopt beep
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/jakub/.zshrc'
setopt extended_glob
autoload -Uz compinit
compinit
# End of lines added by compinstall
autoload -U promptinit
promptinit

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

#opts
setopt chase_links
setopt complete_in_word
setopt correct
setopt hist_ignore_dups
setopt hist_ignore_space
setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_SAVE_NO_DUPS
setopt list_types
setopt noflowcontrol

export EDITOR="vim"
export TERM='xterm-256color'

#tab completion for PID
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

#useful for path editing â€” backward-delete-word, but with / as additional delimiter
backward-delete-to-slash () {
  local WORDCHARS=${WORDCHARS//\//}
  zle .backward-delete-word
}
zle -N backward-delete-to-slash

#aliases devel
alias cdperm='cd ~/devel/permon/'
alias gsr='~/devel/scripts/git_status_reverse.sh'
alias ga='python ~/devel/scripts/git_add_interactive.py'

#aliases
alias ls='ls --color=auto'
alias ll='ls -lh --color=auto'
alias lla='ls -lah --color=auto'
alias cp='cp -v'
alias mv='mv -v'
alias rm='rm -v'
alias cpv='cp'
alias mvv='mv'
alias rmv='rm'
alias rsmp='RANDOM=RANDOM; smplayer "$(ls | sed -n "$(($[${RANDOM}%$(ls | wc -l)]+1))p")"'
alias rsmpr='RANDOM=`od -vAn -N4 -tu4 < /dev/random`; smplayer "$(find . -type f -size +100M | sed -n "$(($[${RANDOM}%$(find . -type f -size +100M| wc -l)]+1))p")"'
alias dict='lynx slovnik.cz'
alias rfeh='RANDOM=RANDOM; feh "$(ls -d $(find .)| sed -n "$(($[${RANDOM}%$(ls -d $(find .) | wc -l)]+1))p")"'
alias rafeh='RANDOM=RANDOM; feh "$(ls -1| sed -n "$(($[${RANDOM}%$(ls -1 | wc -l)]+1))p")"'
alias grep='grep -I --color'
alias vim='vim --servername vim'
alias v='vim'

#global aliases
alias -g L='|less'
#alias -g S='&> /dev/null &'

#functions
function psgrep() {
  ps aux | grep "${1:-.}" | grep -v grep
}

#auto ext
alias -s doc=libreoffice
alias -s gz='tar -xzvf'
alias -s bz2='tar -xjvf'
alias -s txt=$EDITOR

#vi mode
zvm_config() {
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
  ZVM_INSERT_MODE_CURSOR=$ZVM_CURSOR_BLOCK
  ZVM_NORMAL_MODE_CURSOR=$ZVM_CURSOR_BLOCK
  ZVM_OPPEND_MODE_CURSOR=$ZVM_CURSOR_BLOCK
}
ZVM_INIT_MODE=sourcing
source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh

MODE_COLOR="cyan"
function zvm_after_select_vi_mode() {
  case $ZVM_MODE in
    $ZVM_MODE_NORMAL)
      MODE_COLOR="#d7ff00"
    ;;
    $ZVM_MODE_INSERT)
      MODE_COLOR="cyan"
    ;;
  esac
  zle .reset-prompt #for ctrl-c from normal mode
}

#prompt
setopt PROMPT_SUBST
autoload -U colors && colors
PROMPT='%F{$MODE_COLOR}%n@%m %1~ %#%{$reset_color%} '

export PATH=$PATH:/usr/bin:~/bin

###key binding
autoload zkbd
function zkbd_file() {
    [[ -f ~/.zkbd/${TERM}-${VENDOR}-${OSTYPE} ]] && printf '%s' ~/".zkbd/${TERM}-${VENDOR}-${OSTYPE}" && return 0
    [[ -f ~/.zkbd/${TERM}-${DISPLAY}          ]] && printf '%s' ~/".zkbd/${TERM}-${DISPLAY}"          && return 0
    return 1
}

[[ ! -d ~/.zkbd ]] && mkdir ~/.zkbd
keyfile=$(zkbd_file)
ret=$?
if [[ ${ret} -ne 0 ]]; then
    zkbd
    keyfile=$(zkbd_file)
    ret=$?
fi
if [[ ${ret} -eq 0 ]] ; then
    source "${keyfile}"
else
    printf 'Failed to setup keys using zkbd.\n'
fi
unfunction zkbd_file; unset keyfile ret

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
[[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
[[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char
bindkey '^[w' backward-delete-to-slash

bindkey '^r' history-incremental-search-backward

#syntax highlighting must be loaded last
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

